import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;

class Item {
   private String name;
    private int price;

    public Item(String name, int price) {
        this.name = name;
        this.price = price;
    }

    public String getName() {
        return name;
    }

    public int getPrice() {
        return price;
    }
}

class itemNotFoundException extends Exception {
    public itemNotFoundException(String message) {
        super(message);
    }
}

class Restaurant {
    private String name;
    private String location;
    private LocalTime openingTime;
    private LocalTime closingTime;
    private List<Item> menu = new ArrayList<Item>();

    public Restaurant(String name, String location, LocalTime openingTime, LocalTime closingTime) {
        this.name = name;
        this.location = location;
        this.openingTime = openingTime;
        this.closingTime = closingTime;
    }

    public boolean isRestaurantOpen() {
        LocalTime currentTime = getCurrentTime();
        return currentTime.isAfter(openingTime) && currentTime.isBefore(closingTime);
    }

    public LocalTime getCurrentTime() {
        return LocalTime.now();
    }

    public List<Item> getMenu() {
        return menu;
    }

    private Item findItemByName(String itemName) {
        for (Item item : menu) {
            if (item.getName().equals(itemName))
                return item;
        }
        return null;
    }

    public void addToMenu(String name, int price) {
        Item newItem = new Item(name, price);
        menu.add(newItem);
    }

    public void removeFromMenu(String itemName) throws itemNotFoundException {
        Item itemToBeRemoved = findItemByName(itemName);
        if (itemToBeRemoved == null)
            throw new itemNotFoundException(itemName);

        menu.remove(itemToBeRemoved);
    }

    public void displayDetails() {
        System.out.println("Restaurant:" + name + "\n"
                + "Location:" + location + "\n"
                + "Opening time:" + openingTime + "\n"
                + "Closing time:" + closingTime + "\n"
                + "Menu:" + "\n" + getMenu());

    }

    public String getName() {
        return name;
    }
}

class RestaurantService {
    private List<Restaurant> restaurants = new ArrayList<>();

    public void addRestaurant(Restaurant restaurant) {
        restaurants.add(restaurant);
    }

    public Restaurant findRestaurantByName(String restaurantName) {
        for (Restaurant restaurant : restaurants) {
            if (restaurant.getName().equals(restaurantName)) {
                return restaurant;
            }
        }
        return null;
    }
}

class RestaurantServiceTest {
    public static void main(String[] args) {
        RestaurantService restaurantService = new RestaurantService();

        // Test case 1: Searching for an existing restaurant should return the expected restaurant object
        Restaurant restaurant1 = new Restaurant("Restaurant A", "Location A", LocalTime.of(10, 0), LocalTime.of(20, 0));
        restaurantService.addRestaurant(restaurant1);

        String searchRestaurantName1 = "Restaurant A";
        Restaurant foundRestaurant1 = restaurantService.findRestaurantByName(searchRestaurantName1);
        if (foundRestaurant1 != null) {
            System.out.println("Found restaurant: " + foundRestaurant1.getName());
        } else {
            System.out.println("Restaurant not found.");
        }

        // Test case 2: Searching for a non-existing restaurant should throw an exception
        String searchRestaurantName2 = "Restaurant B";
        try {
            Restaurant foundRestaurant2 = restaurantService.findRestaurantByName(searchRestaurantName2);
            System.out.println("Found restaurant: " + foundRestaurant2.getName());
        } catch (NullPointerException e) {
            System.out.println("Restaurant not found.");
        }
    }
}

class RestaurantTest {
    public static void main(String[] args) {
        // Create a restaurant
        Restaurant restaurant = new Restaurant("Sample Restaurant", "Sample Location",
                LocalTime.of(9, 0), LocalTime.of(22, 0));

        // Add items to the menu
        restaurant.addToMenu("Item 1", 10);
        restaurant.addToMenu("Item 2", 15);
        restaurant.addToMenu("Item 3", 8);

        // Test case 1: Check if the restaurant is open
        if (restaurant.isRestaurantOpen()) {
            System.out.println("The restaurant is open.");
        } else {
            System.out.println("The restaurant is closed.");
        }

        // Test case 2: Remove an item from the menu
        try {
            restaurant.removeFromMenu("Item 2");
            System.out.println("Item removed from the menu.");
        } catch (itemNotFoundException e) {
            System.out.println("Item not found in the menu.");
        }
    }
}


